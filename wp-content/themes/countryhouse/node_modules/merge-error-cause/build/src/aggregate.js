import{setErrorProperty}from"./set.js";












export const mergeAggregateCauses=function(parent,recurse){
if(parent.errors===undefined){
return;
}

const errors=parent.errors.
map((error)=>recurse(error).error).
filter(Boolean);
setErrorProperty(parent,"errors",errors);
};

export const mergeAggregateErrors=function({
target,
source,
parent,
child})
{
if(!hasErrors(target)){
mergeSourceErrors(target,source);
return;
}

if(hasErrors(source)){
setErrorProperty(target,"errors",[...child.errors,...parent.errors]);
}
};

const mergeSourceErrors=function(target,source){
if(source.errors!==undefined){
setErrorProperty(target,"errors",source.errors);
}
};

const hasErrors=function(targetOrSource){
return(
targetOrSource.errors!==undefined&&targetOrSource.errors.length!==0);

};
//# sourceMappingURL=aggregate.js.map