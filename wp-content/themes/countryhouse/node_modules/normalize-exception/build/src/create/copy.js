import{CORE_ERROR_PROPS,getDescriptor}from"../descriptors.js";

const{hasOwnProperty:hasOwn}=Object.prototype;




export const copyObject=function(object){
const objectCopy={};


for(const propName of getPropsToCopy(object)){

try{
const value=object[propName];
const{
enumerable,
configurable,
writable=true}=
getDescriptor(object,propName);

Object.defineProperty(objectCopy,propName,{
value,
enumerable,
configurable,
writable});

}catch{}
}

return objectCopy;
};





const getPropsToCopy=function(object){
const propNames=getOwnKeys(object);


for(const propName of CORE_ERROR_PROPS){

if(isInheritedProp(object,propName)){

propNames.push(propName);
}
}

return propNames;
};


const getOwnKeys=function(object){
try{
return Reflect.ownKeys(object);
}catch{
return[];
}
};


const isInheritedProp=function(object,propName){
try{
return propName in object&&!hasOwn.call(object,propName);
}catch{
return false;
}
};
//# sourceMappingURL=copy.js.map