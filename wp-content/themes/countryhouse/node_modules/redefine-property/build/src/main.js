import{mergeDescriptors}from"./merge.js";
import{normalizeInput}from"./normalize.js";


export default function redefineProperty(input,key,newDescriptor){
const newDescriptorA=normalizeInput(input,key,newDescriptor);
const currentDescriptor=getCurrentDescriptor(input,key);
const finalDescriptor=mergeDescriptors(newDescriptorA,currentDescriptor);
setProperty(input,key,finalDescriptor);
return input;
}


const getCurrentDescriptor=function(input,key){
const descriptor=Object.getOwnPropertyDescriptor(input,key);

if(descriptor!==undefined){
return descriptor;
}

const prototype=Object.getPrototypeOf(input);
return prototype===null?{}:getCurrentDescriptor(prototype,key);
};


const setProperty=function(input,key,finalDescriptor){
try{

Object.defineProperty(input,key,finalDescriptor);
}catch{}
};
//# sourceMappingURL=main.js.map