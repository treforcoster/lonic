import setErrorMessage from"set-error-message";

import{isSubclass}from"../utils/subclass.js";











export const shouldPrefixCause=(error,ErrorClass)=>{
const{cause}=error;
return(
hasValidName(cause)&&(
hasUsefulName(cause,ErrorClass)||cause.name!==cause.constructor.name));

};

const hasValidName=(cause)=>
typeof cause.name==="string"&&
cause.name!==""&&
typeof cause.constructor==="function"&&
typeof cause.constructor.name==="string";

const hasUsefulName=(cause,ErrorClass)=>
!(
isSubclass(cause.constructor,ErrorClass)||
isSubclass(ErrorClass,cause.constructor)||
cause.constructor.name in globalThis);



export const prefixCause=(cause)=>{
const oldMessage=typeof cause.message==="string"?cause.message:"";
const newMessage=
oldMessage===""?cause.name:`${cause.name}: ${oldMessage}`;
setErrorMessage(cause,newMessage);
return oldMessage;
};


export const undoPrefixCause=(cause,oldMessage)=>{
setErrorMessage(cause,oldMessage);
};
//# sourceMappingURL=prefix.js.map