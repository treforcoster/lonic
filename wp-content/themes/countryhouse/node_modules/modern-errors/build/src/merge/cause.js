import isErrorInstance from"is-error-instance";
import mergeErrorCause from"merge-error-cause";

import{isSubclass}from"../utils/subclass.js";

import{shouldPrefixCause,prefixCause,undoPrefixCause}from"./prefix.js";


export const mergeSpecificCause=(error,cause)=>{
error.cause=cause;
error.wrap=true;
return mergeErrorCause(error);
};













export const mergeCause=(error,ErrorClass)=>{
if(!isErrorInstance(error.cause)){
return mergeErrorCause(error);
}

error.wrap=isSubclass(error.cause.constructor,ErrorClass);

if(!shouldPrefixCause(error,ErrorClass)){
return mergeErrorCause(error);
}

return mergePrefixedError(error);
};

const mergePrefixedError=(error)=>{
const{cause}=error;
const oldMessage=prefixCause(cause);
const errorA=mergeErrorCause(error);

if(cause!==errorA){
undoPrefixCause(cause,oldMessage);
}

return errorA;
};
//# sourceMappingURL=cause.js.map