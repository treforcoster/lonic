import{mergePluginsOpts}from"../../options/merge.js";
import{finalizePluginsOpts}from"../../options/plugins.js";
import{instancesData,classesData}from"../../subclass/map.js";










export const getAnyErrorInfo=(
{ErrorClass,methodOpts,plugins,plugin},
error)=>
{
const errorA=ErrorClass.normalize(error);
const info=getKnownErrorInfo({error:errorA,methodOpts,plugins,plugin});
return{...info,error:errorA};
};


export const getKnownErrorInfo=({error,methodOpts,plugins,plugin})=>{
const ErrorClass=error.constructor;
const ErrorClasses=getSubclasses(ErrorClass);
const{classOpts}=classesData.get(ErrorClass);
const{pluginsOpts}=instancesData.get(error);
const pluginsOptsA=mergePluginsOpts(classOpts,pluginsOpts,plugins);
const options=finalizePluginsOpts({
pluginsOpts:pluginsOptsA,
methodOpts,
plugins,
plugin
});
return{ErrorClass,ErrorClasses,options};
};






export const getSubclasses=(ErrorClass)=>{
const{subclasses}=classesData.get(ErrorClass);
return[ErrorClass,...subclasses];
};
//# sourceMappingURL=error.js.map