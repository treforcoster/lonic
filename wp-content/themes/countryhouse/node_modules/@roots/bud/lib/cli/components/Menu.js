import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import figures from '@roots/bud-support/figures';
import * as Ink from 'ink';
import { useEffect, useState } from 'react';
const options = [
    [
        `build production`,
        `build application for production`,
        [`build`, `production`],
    ],
    [
        `build development`,
        `start development server`,
        [`build`, `development`],
    ],
    [
        `doctor`,
        `check bud.js configuration for common errors and issues`,
        [`doctor`],
    ],
    [
        `repl`,
        `open a repl to explore bud just prior to compilation`,
        [`repl`],
    ],
    [
        `upgrade`,
        `upgrade bud.js and extensions to the latest stable version`,
        [`upgrade`],
    ],
];
export const Menu = ({ cli }) => {
    const [selected, setSelected] = useState(0);
    const [running, setRunning] = useState(false);
    Ink.useInput((key, input) => {
        if (running)
            return;
        input[`downArrow`] && setSelected(selected + 1);
        input[`upArrow`] && setSelected(selected - 1);
        if (input.escape) {
            // eslint-disable-next-line n/no-process-exit
            process.exit(0);
        }
        if (input.return) {
            setRunning(true);
            cli.run(options[selected][2]);
        }
    });
    useEffect(() => {
        if (selected > options.length - 1)
            setSelected(0);
        if (selected < 0)
            setSelected(options.length - 1);
    }, [selected]);
    return (_jsx(Ink.Box, { flexDirection: "column", marginTop: 1, children: options.map(([option, description, command], index) => {
            return (_jsxs(Ink.Text, { color: selected === index ? `blue` : `white`, children: [selected === index ? figures.radioOn : figures.radioOff, `  `, option, _jsxs(Ink.Text, { color: "white", dimColor: true, children: [` `, description] })] }, index));
        }) }));
};
//# sourceMappingURL=Menu.js.map