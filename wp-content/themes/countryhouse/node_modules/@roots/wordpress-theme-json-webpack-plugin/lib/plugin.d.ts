import type * as Theme from '@roots/wordpress-theme-json-webpack-plugin/theme';
import type { Compiler, WebpackPluginInstance } from 'webpack';
/**
 * Plugin options
 */
export interface Options {
    /**
     * WordPress `settings`
     * @see https://developer.wordpress.org/block-editor/how-to-guides/themes/theme-json/
     */
    settings?: Partial<Theme.GlobalSettingsAndStyles['settings']>;
    /**
     * WordPress `customTemplates`
     * @see https://developer.wordpress.org/block-editor/how-to-guides/themes/theme-json/
     */
    customTemplates?: Theme.GlobalSettingsAndStyles['customTemplates'];
    /**
     * Emit path
     */
    path: string;
}
/**
 * ThemeJSONWebpackPlugin
 */
export declare class ThemeJsonWebpackPlugin implements WebpackPluginInstance {
    options: Options;
    /**
     * theme.json path
     */
    get path(): string;
    /**
     * theme.json settings
     */
    get settings(): string;
    /**
     * Class constructor
     *
     * @param options - Plugin options
     */
    constructor(options: Options);
    /**
     * Apply plugin
     *
     * @param compiler - Webpack compiler
     * @returns void
     */
    apply(compiler: Compiler): void;
    /**
     * Compiler done callback
     *
     * @returns Promise
     */
    done(): Promise<void>;
}
//# sourceMappingURL=plugin.d.ts.map