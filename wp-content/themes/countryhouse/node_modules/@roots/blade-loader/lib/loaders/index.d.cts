import type { LoaderContext } from 'webpack';
export declare const repository: {
    css: {
        loader: string;
        extension: "css";
        pattern: RegExp;
        default: (source: string) => string;
    };
    scss: {
        loader: string;
        extension: "scss";
        pattern: RegExp;
        default: (source: string) => string;
    };
    js: {
        loader: string;
        extension: "js";
        pattern: RegExp;
        default: (source: string) => string;
    };
    ts: {
        loader: string;
        extension: "ts";
        pattern: RegExp;
        default: (source: string) => string;
    };
    vue: {
        loader: string;
        extension: "vue";
        pattern: RegExp;
        default: (source: string) => string;
    };
};
export declare const make: <K extends "css" | "js" | "scss" | "ts" | "vue">(this: LoaderContext<any>, { extension, loader }: {
    css: {
        loader: string;
        extension: "css";
        pattern: RegExp;
        default: (source: string) => string;
    };
    scss: {
        loader: string;
        extension: "scss";
        pattern: RegExp;
        default: (source: string) => string;
    };
    js: {
        loader: string;
        extension: "js";
        pattern: RegExp;
        default: (source: string) => string;
    };
    ts: {
        loader: string;
        extension: "ts";
        pattern: RegExp;
        default: (source: string) => string;
    };
    vue: {
        loader: string;
        extension: "vue";
        pattern: RegExp;
        default: (source: string) => string;
    };
}[K]) => string;
export declare const extract: (source: string, pattern: RegExp) => string;
//# sourceMappingURL=index.d.cts.map