import type { Bud } from '@roots/bud-framework';
import { ServiceContainer } from '@roots/bud-framework/service';
import type { Api as Contract } from '@roots/bud-framework/services';
/**
 * API service
 *
 * @remarks
 * Binds facade methods to the framework and provides a way to list them,
 * call them, and otherwise manipulate them.
 */
export declare class Api extends ServiceContainer implements Contract {
    /**
     * Called methods
     */
    trace: Contract['trace'];
    /**
     * Queued method calls
     */
    queue: Contract['queue'];
    /**
     * `bootstrap` callback
     */
    bootstrap?(_app: Bud): Promise<void>;
    /**
     * Bind a synchronous facade for use in configs
     */
    bindFacade(name: string, fn: CallableFunction): void;
    /**
     * Call an api method directly
     */
    call(name: string, args: Array<any>): Promise<Bud>;
    /**
     * Execute all queued method calls
     */
    processQueue(): Promise<void>;
}
//# sourceMappingURL=service.d.ts.map