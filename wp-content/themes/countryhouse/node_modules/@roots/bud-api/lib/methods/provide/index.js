export const provide = async function (packages) {
    if (!packages) {
        throw new Error(`bud.provide: packages must be an object`);
    }
    const plugin = this.extensions.get(`@roots/bud-extensions/webpack-provide-plugin`);
    const options = plugin.getOptions();
    const modified = Object.entries(packages).reduce((acc, [key, value]) => {
        const normalValue = Array.isArray(value) ? value : [value];
        return {
            ...(acc ?? {}),
            ...normalValue.reduce((all, item) => ({
                ...(all ?? {}),
                [item]: key,
            }), {}),
        };
    }, options ?? {});
    plugin.setOptions(modified);
    return this;
};
//# sourceMappingURL=index.js.map