import { handleTypeError } from '../../errors/handleValidationTypeError.js';
import * as schema from './schema.js';
/**
 * Handle [string, string] values
 */
export async function handleSignifierValuePair(bud, input) {
    const signifier = await getParameter(bud, input, 0);
    const value = await getParameter(bud, input, 1);
    const aliases = await bud.hooks.filterAsync(`build.resolve.alias`, {
        '@src': bud.path(`@src`),
    });
    bud.hooks.async(`build.resolve.alias`, { ...aliases, [signifier]: value });
    return bud;
}
async function getParameter(bud, parameters, index) {
    const validation = await schema.signifier.safeParseAsync(parameters[index]);
    if (!validation.success)
        return handleTypeError(bud, `bud.alias`, validation);
    return validation.data;
}
//# sourceMappingURL=handleSignifierValuePair.js.map