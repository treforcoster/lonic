import type { Bud } from '@roots/bud-framework';
import { Extension } from '@roots/bud-framework/extension';
/**
 * Http modules configuration options
 */
export interface Options {
    allowedUris?: Set<string | RegExp | ((uri: string) => boolean)>;
    cacheLocation: false | string;
    frozen: boolean;
    lockfileLocation: string;
    proxy: string;
    upgrade: boolean;
}
/**
 * Http modules configuration
 */
export default class Cdn extends Extension<Options, null> {
    /**
     * CDN key to URL mapping
     */
    sources: Map<string, string>;
    /**
     * Whether to cache modules locally
     */
    cacheEnabled: boolean;
    /**
     * Disable local caching of modules
     */
    disableCache(): this;
    /**
     * Allowed URIs getter/setter
     */
    get allowedUris(): Set<string | RegExp | ((uri: string) => boolean)>;
    set allowedUris(value: Set<string | RegExp | ((uri: string) => boolean)>);
    /**
     * Cache location getter/setter
     */
    get cacheLocation(): string | false;
    set cacheLocation(value: string | false | Options['cacheLocation']);
    /**
     * Frozen getter/setter
     */
    get frozen(): boolean;
    set frozen(value: boolean);
    /**
     * Lockfile location getter/setter
     */
    get lockfileLocation(): string;
    set lockfileLocation(value: string | Options['lockfileLocation']);
    /**
     * Proxy getter/setter
     */
    get proxy(): string;
    set proxy(value: string | Options['proxy']);
    /**
     * Upgrade location getter/setter
     */
    get upgrade(): boolean;
    set upgrade(value: boolean | Options['upgrade']);
    /**
     * Set allowed URLs
     */
    setAllowedUris(value: Set<string | RegExp | ((uri: string) => boolean)>): this;
    /**
     * Set cache location
     */
    setCacheLocation(value: string | Options['cacheLocation']): this;
    /**
     * Freeze?
     */
    freeze(value?: boolean): this;
    /**
     * Set lockfile location
     */
    setLockfileLocation(value: string | Options['lockfileLocation']): this;
    /**
     * Set proxy location
     */
    setProxy(value: string | Options['proxy']): this;
    /**
     * Set upgrade
     */
    setUpgrade(value: boolean | Options['upgrade']): this;
    /**
     * {@link Extension.buildBefore}
     */
    buildBefore(bud: Bud): Promise<void>;
}
//# sourceMappingURL=index.d.ts.map