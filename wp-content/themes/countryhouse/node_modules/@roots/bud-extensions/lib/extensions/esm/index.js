import { __decorate } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { disabled, expose, label, } from '@roots/bud-framework/extension/decorators';
import isUndefined from '@roots/bud-support/lodash/isUndefined';
/**
 * ESM output configuration
 */
let Esm = class Esm extends Extension {
    /**
     * {@link Extension.buildBefore}
     */
    async buildBefore(bud) {
        bud.hooks
            .fromMap({
            'build.experiments': (experiments = {}) => ({
                ...experiments,
                outputModule: true,
            }),
            'build.output.module': true,
        })
            .when(() => !isUndefined(bud.context.manifest?.imports), ({ hooks }) => hooks.on(`build.externals`, externals => ({
            ...(externals ?? {}),
            ...bud.context.manifest.imports,
        })));
    }
};
Esm = __decorate([
    label(`@roots/bud-extensions/esm`),
    expose(`esm`),
    disabled
], Esm);
export default Esm;
//# sourceMappingURL=index.js.map