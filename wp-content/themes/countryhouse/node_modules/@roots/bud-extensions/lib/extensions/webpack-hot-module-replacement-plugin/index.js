import { __decorate, __metadata } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, label } from '@roots/bud-framework/extension/decorators';
/**
 * Hot module replacement plugin configuration
 */
let BudHMR = class BudHMR extends Extension {
    /**
     * {@link Extension.make}
     */
    async make() {
        const { HotModuleReplacementPlugin } = await this.import(`webpack`);
        return new HotModuleReplacementPlugin();
    }
    /**
     * {@link Extension.when}
     */
    when(bud) {
        if (bud.isProduction)
            return false;
        if (bud.isCLI() && bud.context.args.hot === false)
            return false;
        return true;
    }
};
__decorate([
    bind,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], BudHMR.prototype, "make", null);
BudHMR = __decorate([
    label(`@roots/bud-extensions/webpack-hot-module-replacement-plugin`)
], BudHMR);
export default BudHMR;
//# sourceMappingURL=index.js.map