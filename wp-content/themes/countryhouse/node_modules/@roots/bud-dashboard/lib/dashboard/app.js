import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { platform } from 'node:os';
import * as Ink from 'ink';
import Compilation from './compilation/compilation.component.js';
import { Server } from './server/index.js';
const App = ({ compilations, context, devUrl, proxyUrl, displayServerInfo, displayAssets, displayEntrypoints, publicDevUrl, publicProxyUrl, mode, watchFiles = new Set(), }) => {
    if (!compilations.length)
        return (_jsx(Ink.Box, { flexDirection: "column", children: _jsx(Ink.Text, { children: "No compilations" }) }));
    return (_jsxs(Ink.Box, { flexDirection: "column", children: [platform() === `win32` ? (_jsxs(Ink.Box, { borderColor: "red", borderStyle: "double", flexDirection: "column", padding: 1, children: [_jsx(Ink.Text, { children: "\uD83D\uDEAB Your OS is not a supported platform" }), _jsx(Ink.Text, { children: ` ` }), _jsxs(Ink.Text, { children: ["You will likely encounter problems.", ` `, _jsx(Ink.Text, { bold: true, underline: true, children: "Do not make github issues or support requests about Windows builds" }), ` `, "unless you are also submitting accompanying PRs."] }), _jsx(Ink.Text, { children: ` ` }), _jsx(Ink.Text, { children: "bud.js supports Windows through the Windows Subsystem for Linux (WSL): https://learn.microsoft.com/en-us/windows/wsl/install" })] })) : null, compilations.map((compilation, id) => (_jsx(Ink.Box, { flexDirection: "column", paddingBottom: 1, children: _jsx(Compilation, { compilation: compilation, context: context, displayAssets: displayAssets, displayEntrypoints: displayEntrypoints }) }, id))), mode === `development` ? (_jsx(Ink.Box, { flexDirection: "column", paddingBottom: 1, children: _jsx(Server, { devUrl: devUrl, publicDevUrl: publicDevUrl, proxyUrl: proxyUrl, publicProxyUrl: publicProxyUrl, watchFiles: watchFiles, displayServerInfo: displayServerInfo }) })) : null] }));
};
export default App;
//# sourceMappingURL=app.js.map