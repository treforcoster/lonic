import type { AcceptCallback, ContextFactory } from './index.js';
export interface Props {
    api: {
        register: (...args: Array<any>) => void;
        unregister: (...args: Array<any>) => void;
    };
    getContext: ContextFactory;
    accept: AcceptCallback;
    before?: () => unknown;
    after?: (changed?: Array<{
        name: string;
    }>) => unknown;
}
export declare const setNotify: (value: boolean) => void;
export declare const load: ({ api, getContext, accept, before, after, }: Props) => void;
//# sourceMappingURL=editor.d.ts.map