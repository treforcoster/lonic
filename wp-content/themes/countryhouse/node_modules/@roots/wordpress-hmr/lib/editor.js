import { dispatch } from '@wordpress/data';
import { Cache } from './cache.js';
let initial = false;
let notify = true;
export const setNotify = (value) => {
    notify = value;
};
export const load = ({ api, getContext, accept, before = () => null, after = () => null, }) => {
    const cache = new Cache();
    const handler = () => {
        const changed = [];
        before();
        const context = getContext();
        context?.keys().forEach((key) => {
            const raw = context(key);
            const source = raw.default || raw;
            if (cache.is(key, source))
                return;
            if (cache.has(key))
                api.unregister(cache.get(key));
            api.register(source);
            changed.push(source);
            cache.set(key, source);
        });
        after(changed);
        if (notify && import.meta.webpackHot) {
            if (!initial) {
                initial = true;
                dispatch(`core/notices`).createInfoNotice(`ðŸ”¥ Reload enabled`, {
                    id: `hmr-enabled`,
                    type: `snackbar`,
                });
            }
        }
        return context;
    };
    const { id } = handler();
    accept(id, handler);
};
//# sourceMappingURL=editor.js.map