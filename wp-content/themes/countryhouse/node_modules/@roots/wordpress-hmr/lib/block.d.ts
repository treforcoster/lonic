import { BlockConfiguration } from '@wordpress/blocks';
import type * as Filter from './filter.js';
import type { Style } from './style.js';
import type { Variant } from './variation.js';
export interface Props extends BlockConfiguration<Record<string, any>> {
    name: string;
    filters?: Filter.KeyedFilters;
    styles?: Array<Omit<Style, 'block'>>;
    variations?: Array<Omit<Variant, 'block'>>;
}
/**
 * Register block
 */
export declare const register: ({ name, filters, styles, variations, ...settings }: Props) => void;
/**
 * Unregister block
 */
export declare const unregister: ({ name, filters, styles, variations, }: Pick<Props, `name` | `filters` | `styles` | `variations`>) => void;
//# sourceMappingURL=block.d.ts.map