var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
export const make = (options) => __awaiter(void 0, void 0, void 0, function* () {
    if (options.indicator && !customElements.get(`bud-activity-indicator`)) {
        yield import(`./indicator/index.js`)
            .then(makeController)
            .then(maybePushController);
    }
    if (options.overlay && !customElements.get(`bud-error`)) {
        yield import(`./overlay/index.js`)
            .then(makeController)
            .then(maybePushController);
    }
    return window.bud.controllers;
});
const makeController = (module) => __awaiter(void 0, void 0, void 0, function* () {
    if (!module)
        return;
    return yield module.make();
});
const maybePushController = (controller) => {
    if (!controller)
        return;
    window.bud.controllers.push(controller);
};
