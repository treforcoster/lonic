import { __decorate, __metadata } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, dependsOn, expose, label, } from '@roots/bud-framework/extension/decorators';
/**
 * React configuration
 */
let BudReact = class BudReact extends Extension {
    /**
     * Accessor for `@roots/bud-react/react-refresh`
     *
     * @readonly
     */
    get refresh() {
        return this.app.extensions.get(`@roots/bud-react/react-refresh`);
    }
    /**
     * {@link Extension.configAfter}
     *
     * @remarks
     * Adds the `@babel/preset-react` preset to babel if `@roots/bud-esbuild` is not
     * registered and `@roots/bud-babel` is available.
     */
    async boot(bud) {
        if (![this.useSWC, this.useTypeScript, this.useBabel].some(t => t === true)) {
            this.logger.warn(`No supported compiler found.`);
        }
        if (this.useSWC) {
            this.app.swc.set(`jsc.transform.react.runtime`, `automatic`);
        }
        if (this.useBabel) {
            this.app.babel.setPreset(`@babel/preset-react`, await this.resolve(`@babel/preset-react`, import.meta.url));
        }
    }
    /**
     * Use babel
     *
     * @readonly
     */
    get useBabel() {
        if (this.useTypeScript)
            return false;
        if (this.useSWC)
            return false;
        return this.app.extensions.has(`@roots/bud-babel`);
    }
    /**
     * Use SWC
     *
     * @readonly
     */
    get useSWC() {
        return this.app.extensions.has(`@roots/bud-swc`);
    }
    /**
     * Use TypeScript
     *
     * @readonly
     */
    get useTypeScript() {
        if (this.useSWC)
            return false;
        if (this.app.extensions.has(`@roots/bud-typescript`)) {
            return this.app.extensions.get(`@roots/bud-typescript`).options.babel;
        }
        return false;
    }
};
__decorate([
    bind,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Function]),
    __metadata("design:returntype", Promise)
], BudReact.prototype, "boot", null);
BudReact = __decorate([
    label(`@roots/bud-react`),
    dependsOn([`@roots/bud-react/react-refresh`]),
    expose(`react`)
], BudReact);
export default BudReact;
//# sourceMappingURL=extension.js.map