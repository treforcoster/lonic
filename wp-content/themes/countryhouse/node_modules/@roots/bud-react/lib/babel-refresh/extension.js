import { __decorate, __metadata } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, development, label, } from '@roots/bud-framework/extension/decorators';
/**
 * Register `react-refresh-typescript` transform with TSC compiler
 */
let BudBabelRefresh = class BudBabelRefresh extends Extension {
    /**
     * {@link Extension.register}
     */
    async register(bud) {
        this.logger.log(`Registering react-refresh-babel transformer`);
        bud.babel.setPlugin(`react-refresh/babel`, await this.resolve(`react-refresh/babel`, import.meta.url));
    }
};
__decorate([
    bind,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Function]),
    __metadata("design:returntype", Promise)
], BudBabelRefresh.prototype, "register", null);
BudBabelRefresh = __decorate([
    label(`@roots/bud-react/babel-refresh`),
    development
], BudBabelRefresh);
export default BudBabelRefresh;
//# sourceMappingURL=extension.js.map