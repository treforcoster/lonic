import { __decorate, __metadata } from "tslib";
import { Extension } from '@roots/bud-framework/extension';
import { bind, development, label, } from '@roots/bud-framework/extension/decorators';
/**
 * Register `react-refresh-swc` transform with TSC compiler
 */
let BudSWCRefresh = class BudSWCRefresh extends Extension {
    /**
     * {@link Extension.buildBefore}
     */
    async buildBefore(bud) {
        this.registerTransform(bud);
    }
    /**
     * Register `react-refresh-swc` transform plugin
     */
    async registerTransform(bud) {
        this.logger.log(`Registering swc react-refresh transformer`);
        this.app.swc.set(`jsc.transform.react.development`, this.app.isDevelopment);
        this.app.swc.set(`jsc.transform.react.refresh`, this.app.isDevelopment);
    }
};
__decorate([
    bind,
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Function]),
    __metadata("design:returntype", Promise)
], BudSWCRefresh.prototype, "buildBefore", null);
BudSWCRefresh = __decorate([
    label(`@roots/bud-react/swc-refresh`),
    development
], BudSWCRefresh);
export default BudSWCRefresh;
//# sourceMappingURL=extension.js.map