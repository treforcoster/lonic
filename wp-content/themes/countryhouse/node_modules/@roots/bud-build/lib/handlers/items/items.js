import isBoolean from '@roots/bud-support/lodash/isBoolean';
/**
 * CSS loader
 */
export const css = async ({ makeItem }) => makeItem()
    .setIdent(`css`)
    .setLoader(`css`)
    .setOptions(({ build: { rules }, hooks: { filter } }) => ({
    importLoaders: rules.css.getUse().length - 2,
    modules: false,
    sourceMap: isBoolean(filter(`build.devtool`, false))
        ? filter(`build.devtool`, false)
        : true,
}));
/**
 * CSS module loader
 */
export const cssModule = async ({ makeItem }) => makeItem()
    .setIdent(`cssModule`)
    .setLoader(`css`)
    .setOptions(({ build: { rules }, hooks: { filter } }) => ({
    importLoaders: rules.cssModule.getUse().length - 2,
    modules: true,
    sourceMap: isBoolean(filter(`build.devtool`, false))
        ? filter(`build.devtool`, false)
        : true,
}));
/**
 * CSV loader
 */
export const csv = async ({ makeItem }) => makeItem().setLoader(`csv`).setIdent(`csv`);
/**
 * HTML loader
 */
export const html = async ({ makeItem }) => makeItem().setLoader(`html`).setIdent(`html`);
/**
 * Style loader
 */
export const style = async ({ makeItem }) => makeItem().setLoader(`style`).setIdent(`style`);
/**
 * Markdown loader
 */
export const md = async ({ makeItem }) => makeItem().setIdent(`md`).setLoader(`md`);
/**
 * MiniCss loader
 */
export const minicss = async ({ makeItem }) => makeItem()
    .setLoader(`minicss`)
    .setIdent(`minicss`)
    .setOptions(app => ({
    publicPath: app.hooks.filter(`build.output.publicPath`),
}));
/**
 * Raw loader
 */
export const raw = async ({ makeItem }) => makeItem().setLoader(`raw`).setIdent(`raw`);
/**
 * File loader
 */
export const file = async ({ makeItem }) => makeItem().setLoader(`file`).setIdent(`file`);
/**
 * Xml loader
 */
export const xml = async ({ makeItem }) => makeItem().setLoader(`xml`).setIdent(`xml`);
/**
 * Yml loader
 */
export const yml = async ({ makeItem }) => makeItem().setLoader(`yml`).setIdent(`yml`);
//# sourceMappingURL=items.js.map