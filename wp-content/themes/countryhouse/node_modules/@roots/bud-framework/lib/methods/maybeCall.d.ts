import type { Bud } from '../bud.js';
export interface maybeCall {
    <I = Bud>(maybeCallable: maybeCallable<I>, value?: I): I;
}
export type maybeCallable<I = unknown> = ((param: Bud) => I) | I;
/**
 * Calls a given value if it is a function. The function will be bound to
 * Budbefore it is called.
 *
 * If it is not a function, returns the value without doing anything to it.
 *
 * @typeParam I - Type of the value expected to be returned
 */
export declare function maybeCall<I = Bud>(maybeCallable: maybeCallable): I;
//# sourceMappingURL=maybeCall.d.ts.map