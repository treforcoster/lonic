import type { Bud } from '../bud.js';
import { Service } from '../service.js';
/**
 * Received messages
 */
type MessagesCache = Array<{
    stream: `stdout` | `stderr`;
    message: string;
}>;
/**
 * ConsoleBuffer service class
 *
 * @remarks
 * Intercepts console function calls and emits them using the bud logger.
 * Deduplicates and trims console output.
 */
export default class ConsoleBuffer extends Service {
    /**
     * Received messages
     */
    queue: MessagesCache;
    /**
     * Already processed messages
     */
    stack: MessagesCache;
    /**
     * Restore console function
     *
     * @remarks
     * Returned from {@link patchConsole} call. This is called to restore
     * the normal {@link console} behavior.
     */
    restore?: () => any;
    fetchAndRemove(): {
        stream: "stdout" | "stderr";
        message: string;
    }[];
    /**
     * {@link Extension.register}
     */
    register(bud: Bud): Promise<void>;
}
export {};
//# sourceMappingURL=console.d.ts.map