import type { Bud } from '../bud.js';
import type { Service } from '../service.js';
import type * as Options from '../types/options/index.js';
import type * as Registry from '../types/registry/index.js';
export declare const lifecycleHookHandles: Partial<Array<keyof Registry.EventsStore & keyof Registry.EventsStore>>;
export declare const lifecycleMethods: Partial<Array<keyof Service>>;
/**
 * Services which are only instantiated in the parent compiler context.
 */
export declare const PARENT_SERVICES: Array<string>;
/**
 * Services which are only instantiated in development
 */
export declare const DEVELOPMENT_SERVICES: Array<string>;
/**
 * Mapped hooks to callbacks
 */
export declare const LIFECYCLE_EVENT_MAP: Partial<Record<keyof Registry.EventsStore, keyof Service>>;
/**
 * Bootstrap application
 *
 * @param this - Bud instance
 * @param context - Bud context
 *
 * @returns void
 */
export declare const bootstrap: (this: Bud, context: Options.Context) => Promise<void>;
//# sourceMappingURL=bootstrap.d.ts.map