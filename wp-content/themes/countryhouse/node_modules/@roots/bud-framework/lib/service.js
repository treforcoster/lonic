import lowerCase from '@roots/bud-support/lodash/lowerCase';
import Container from '@roots/container';
/**
 * Service
 *
 * @remarks
 * The Service interface provides access to the Bud parent container.
 *
 * A Service interfaces with the Framework through a series of callbacks at different points in the build.
 */
class Base {
    /**
     * Bud instance
     * @readonly
     */
    get app() {
        return this._app();
    }
    /**
     * Logger instance
     */
    get logger() {
        return this.app.context.logger.scope(this.app.label, lowerCase(this.constructor.name));
    }
    /**
     * Class constructor
     */
    constructor(_app) {
        this._app = _app;
    }
}
/**
 * Service
 *
 * @remarks
 * The Service interface provides access to the {@link Bud} container.
 *
 * A Service interfaces with the Framework through a series of callbacks at different points in the build.
 */
class BaseContainer extends Container {
    /**
     * Bud instance
     * @readonly
     */
    get app() {
        return this._app();
    }
    /**
     * Logger instance
     */
    get logger() {
        return this.app.context.logger.scope(this.app.label, lowerCase(this.constructor.name));
    }
    /**
     * Class constructor
     */
    constructor(_app) {
        super();
        this._app = _app;
    }
}
export { Base, Base as Service, Base as default, BaseContainer, BaseContainer as ServiceContainer, };
//# sourceMappingURL=service.js.map